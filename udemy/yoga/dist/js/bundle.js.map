{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/parts/calc.js","webpack:///./src/js/parts/form.js","webpack:///./src/js/parts/modal.js","webpack:///./src/js/parts/slider.js","webpack:///./src/js/parts/tabs.js","webpack:///./src/js/parts/timer.js","webpack:///./src/js/script.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;;AAEA,sB;;;;;;;;;;;AC5CA;AACA;AACA;AACA,yDAAyD;AACzD,6DAA6D;AAC7D,mDAAmD;;AAEnD,uCAAuC;;AAEvC,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD,+BAA+B;AAC/B,qEAAqE;;;AAGrE,+CAA+C;AAC/C,+CAA+C;AAC/C,0FAA0F;;AAE1F,mDAAmD;AACnD,mCAAmC;;AAEnC,gEAAgE;AAChE,wEAAwE;AACxE,8DAA8D;AAC9D;AACA,aAAa;;AAEb,2BAA2B,uBAAuB,OAAO;AACzD;AACA;AACA,SAAS;AACT;AACA;AACA,sDAAsD;AACtD,iEAAiE;AACjE,uDAAuD;;AAEvD,2CAA2C;;AAE3C;AACA,iDAAiD;AACjD,2BAA2B;AAC3B,uEAAuE;;AAEvE,2CAA2C;AAC3C,2CAA2C;AAC3C,mEAAmE,iBAAiB;AACpF,qBAAqB;AACrB,iBAAiB;;AAEjB,uBAAuB,yBAAyB,OAAO;AACvD,qCAAqC;AACrC,sCAAsC;AACtC,uBAAuB;AACvB;;AAEA,uCAAuC;;AAEvC,2BAA2B;;AAE3B,4DAA4D;AAC5D,oEAAoE;AACpE,8DAA8D;AAC9D;AACA,SAAS;;AAET,uBAAuB,yBAAyB,OAAO;AACvD;AACA;AACA,KAAK;;AAEL;AACA;AACA,8CAA8C;AAC9C,+BAA+B;AAC/B,gEAAgE;;AAEhE,8CAA8C;AAC9C;AACA;AACA,uDAAuD;AACvD,uDAAuD;AACvD,+EAA+E,iBAAiB;;AAEhG,wEAAwE;AACxE;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;;AAEjB;AACA;AACA,+BAA+B,uBAAuB,OAAO;AAC7D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA,sB;;;;;;;;;;;ACvHA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,2BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,uB;;;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,sBAAsB,qBAAqB;AAC3C;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,wB;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,oBAAoB;AACvD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,sB;;;;;;;;;;;ACpCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uB;;;;;;;;;;;ACvDA;AACA;;AAEA,eAAe,mBAAO,CAAC,4CAAc;AACrC,eAAe,mBAAO,CAAC,4CAAc;AACrC,iBAAiB,mBAAO,CAAC,gDAAgB;AACzC,eAAe,mBAAO,CAAC,4CAAc;AACrC,gBAAgB,mBAAO,CAAC,8CAAe;AACvC,gBAAgB,mBAAO,CAAC,8CAAe;;AAEvC;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,E","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/script.js\");\n","function calc() {\r\n    //Делаем калькулятор\r\n    let persons = document.querySelectorAll('.counter-block-input')[0];\r\n    let restDays = document.querySelectorAll('.counter-block-input')[1];\r\n    let place = document.getElementById('select');\r\n    let totalValue = document.getElementById('total');\r\n    let personSum = 0,\r\n        daysSum = 0,\r\n        total = 0;\r\n\r\n    totalValue.innerText = 0;\r\n\r\n    persons.addEventListener('change', function() {\r\n        personSum = +this.value;\r\n        total = (daysSum + personSum) * 4000;\r\n\r\n        if(restDays.value == '' || persons.value == '') {\r\n            totalValue.innerText = 0;\r\n        } else {\r\n            totalValue.innerText = total;\r\n        }\r\n    });\r\n\r\n    restDays.addEventListener('change', function() {\r\n        daysSum = +this.value;\r\n        total = (daysSum + personSum) * 4000;\r\n\r\n        if(restDays.value == '' || persons.value == '') {\r\n            totalValue.innerText = 0;\r\n        } else {\r\n            totalValue.innerText = total;\r\n        }\r\n    });\r\n\r\n    place.addEventListener('change', function() {\r\n        if(persons.value == '' || restDays.value == '') {\r\n            totalValue.innerText = 0;\r\n        } else {\r\n            let a = total;\r\n            totalValue.innerText = a * this.options[this.selectedIndex].value;\r\n        }\r\n    });\r\n}\r\n\r\nmodule.exports = calc;","function form() {\r\n    //Делаем отправку формы на сервер. \r\n    //Всплывающее окно.\r\n    let popUpForm = document.querySelector('.main-form'); //Получаем элементы формы.\r\n    let popUpInput = popUpForm.getElementsByTagName('input'); //Получаем элементы формы.\r\n    let statusText = document.createElement('div'); //Создаём элемент.\r\n\r\n    statusText.classList.add('status'); //Присваиваем класс созданному элементу.\r\n\r\n    let formConfirmText = { //Делаем сообщеия со статусами для пользователя.\r\n        loading: 'Loading...',\r\n        error: 'Всё поломалось...',\r\n        ok: 'Данные отправились. Мы с вами свяжемся.'\r\n    };\r\n    /*\r\n        //!!!============ Весь код пишем в обработчике формы ===============!!!\r\n        popUpForm.addEventListener('submit', e => { //Делаем обработчик на форму.\r\n            e.preventDefault(); //Отменяем действие по умолчанию при отправке формы.\r\n            popUpForm.insertAdjacentElement('beforeend', statusText); //Добавляем элемент со статусом для пользователя.\r\n\r\n\r\n            let request = new XMLHttpRequest(); //Создаём объект отправки.\r\n            request.open('POST', 'server.php'); //Говорим ему как и куда мы отправляем форму.\r\n            request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded'); //Для POST запроса обязательно указывать заголовки.\r\n\r\n            let formData = new FormData(popUpForm); //Создаём объект, который хранит в себе данные с формы.\r\n            request.send(formData); //Отправляем этот объект на сервер.\r\n\r\n            request.addEventListener('readystatechange', () => { //Смотрим состояние запроса.\r\n                if (request.readyState === 4 && request.status == 200) { //Если запрос доставлен без ошибок.\r\n                    statusText.innerText = formConfirmText.ok; //То выводим пользователю сообщение, что всё в порядке.\r\n                }\r\n            });\r\n\r\n            for (let i = 0; i < popUpInput.length; i++) { //Очищаем импут.\r\n                popUpInput[i].value = '';\r\n            }\r\n        });\r\n    */\r\n    //Контактная форма внизу страницы.\r\n    let contactForm = document.querySelector('#form'); //Получаем данные формы.\r\n    let contactInput = contactForm.getElementsByTagName('input'); //Получаем данные формы.\r\n    let contactConfirm = document.createElement('div'); //Создаём элемент.\r\n\r\n    contactConfirm.classList.add('status'); //Добавляем элементу класс.\r\n\r\n    //!!!======= Весь код пишем в обработчике формы ==========!!!\r\n    contactForm.addEventListener('submit', e => { //Делаем обработчик на форму.\r\n        e.preventDefault(); //Отменяем действие по умолчанию при отправке формы.\r\n        contactForm.insertAdjacentElement('beforeend', contactConfirm); //Добавляем элемент со статусом для пользователя.\r\n\r\n        let request = new XMLHttpRequest(); //Создаём объект отправки.\r\n        request.open('POST', 'server.php'); //Говорим ему как и куда мы отправляем форму.\r\n        request.setRequestHeader('Content-Type', 'application/json; charset=utf-8'); //Для POST запроса обязательно указывать заголовки.\r\n        let obj = {}; //Так как несколько импутов в форме, то создаём объект в который будем складывать значения импутов.\r\n        let a, b; //Переменные для пары ключ : значение.\r\n\r\n        for (let i = 0; i < contactInput.length; i++) { //Делаем цикл и проходимся по всем импутам формы.\r\n            a = contactInput[i].type; //Записываем тип поля.\r\n            b = contactInput[i].value; //Записываем значение поля.\r\n            obj[a] = b; //Заполняем объект.\r\n        }\r\n\r\n        let json = JSON.stringify(obj); //Так как объекты не передаются на сервер, переделываем его в формат JSON.\r\n\r\n        request.send(json); //Отправляем этот JSON на сервер.\r\n\r\n        request.addEventListener('readystatechange', () => { //Смотрим состояние запроса.\r\n            if (request.readyState === 4 && request.status == 200) { //Если запрос доставлен без ошибок.\r\n                contactConfirm.innerText = formConfirmText.ok; //То выводим пользователю сообщение, что всё в порядке.\r\n            }\r\n        });\r\n\r\n        for (let i = 0; i < contactInput.length; i++) { //Очищаем импуты.\r\n            contactInput[i].value = '';\r\n        }\r\n    });\r\n\r\n    //Делаем отправку формы всплывающего окна с промисом.\r\n    const sendForm = (elem) => {\r\n        elem.addEventListener('submit', e => { //Делаем обработчик на форму.\r\n            e.preventDefault(); //Отменяем действие по умолчанию при отправке формы.\r\n            elem.insertAdjacentElement('beforeend', statusText); //Добавляем элемент со статусом для пользователя.\r\n\r\n            let formData = new FormData(elem); //Создаём объект, который хранит в себе данные с формы.\r\n            const promFunc = () => {\r\n                return new Promise(function (resolve, reject) {\r\n                    let request = new XMLHttpRequest(); //Создаём объект отправки.\r\n                    request.open('POST', 'server.php'); //Говорим ему как и куда мы отправляем форму.\r\n                    request.setRequestHeader('Content-Type', 'application/json; charset=utf-8'); //Для POST запроса обязательно указывать заголовки.\r\n\r\n                    request.addEventListener('readystatechange', () => { //Смотрим состояние запроса.\r\n                        if (request.readyState === 4) {\r\n                            if (request.status == 200 && request.status < 300) {\r\n                                resolve();\r\n                            } else {\r\n                                reject();\r\n                            }\r\n                        }\r\n                    });\r\n                    request.send(formData);\r\n                });\r\n\r\n            };\r\n            const clearInput = () => {\r\n                for (let i = 0; i < popUpInput.length; i++) { //Очищаем импут.\r\n                    popUpInput[i].value = '';\r\n                }\r\n            };\r\n\r\n            promFunc(formData)\r\n                .then(() => statusText.innerText = formConfirmText.ok)\r\n                .catch(() => statusText.innerText = formConfirmText.error)\r\n                .then(clearInput);\r\n        });\r\n    };\r\n    sendForm(popUpForm);\r\n}\r\n\r\nmodule.exports = form;","function modal() {\r\n    //=====Делаем модальное окно=======\r\n    let modalOverlay = document.querySelector('.overlay');\r\n    let modalClose = document.querySelector('.popup-close');\r\n    let moreButton = document.querySelector('.more');\r\n    let tabWrapper = document.querySelector('.info');\r\n    let tabMoreButton = document.querySelectorAll('.description-btn');\r\n\r\n    moreButton.addEventListener('click', () => {\r\n        modalOverlay.style.display = 'block';\r\n        this.classList.add('more-splash');\r\n        document.body.style.overflow = 'hidden';\r\n    });\r\n\r\n    modalClose.addEventListener('click', () => {\r\n        modalOverlay.style.display = 'none';\r\n        moreButton.classList.remove('more-splash');\r\n        document.body.style.overflow = '';\r\n    });\r\n    //Делегируем событие на обёртку\r\n    tabWrapper.addEventListener('click', e => {\r\n        let target = e.target;\r\n        if (target && target.classList.contains('description-btn')) {\r\n            for (let i = 0; i < tabMoreButton.length; i++) {\r\n                if (target === tabMoreButton[i]) {\r\n                    modalOverlay.style.display = 'block';\r\n                    tabMoreButton[i].classList.add('more-splash');\r\n                    document.body.style.overflow = 'hidden';\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nmodule.exports = modal;","function slider() {\r\n    //Делаем слайдер\r\n    let slideIndex = 1;\r\n    let slides = document.querySelectorAll('.slider-item');\r\n    let prev = document.querySelector('.prev');\r\n    let next = document.querySelector('.next');\r\n    let dotsWrap = document.querySelector('.slider-dots');\r\n    let dots = document.querySelectorAll('.dot');\r\n\r\n    //Убираем все слайды со страницы, кроме слайда с нужным индексом.\r\n    //Также убираем с точек класс active\r\n    //После чего добавляем нужный слайд(index - номер слайда) и точку на страницу. \r\n    const showSlides = index => {\r\n        if(index > slides.length) {\r\n            slideIndex = 1;\r\n        }\r\n        if(index < 1) {\r\n            slideIndex = slides.length;\r\n        }\r\n        slides.forEach(item => item.style.display = 'none');\r\n        dots.forEach(item => item.classList.remove('dot-active'));\r\n        slides[slideIndex - 1].style.display = 'block';\r\n        dots[slideIndex - 1].classList.add('dot-active');\r\n    };\r\n    showSlides(1); \r\n\r\n    const plusSlides = (index) => {\r\n        showSlides(slideIndex += index);\r\n    };\r\n\r\n    const curentSlide = (index) => {\r\n        showSlides(slideIndex = index);\r\n    };\r\n\r\n    //Делаем переключалку на стрелочки.\r\n    prev.addEventListener('click', () => {\r\n        plusSlides(-1);\r\n    });\r\n\r\n    //Делаем переключалку на стрелочки.\r\n    next.addEventListener('click', () => {\r\n        plusSlides(1);\r\n    });\r\n\r\n    //Делаем переключалку на кнопки.\r\n    dotsWrap.addEventListener('click', (event) => {\r\n        for(let i = 0; i < dots.length + 1; i++) {\r\n            if(event.target.classList.contains('dot') && event.target == dots[i - 1]) {\r\n                curentSlide(i);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nmodule.exports = slider;","function tabs() {\r\n    //=======Делаем рабочими табы на странице=======\r\n    let infoHeader = document.querySelector('.info-header');\r\n    let tabs = document.querySelectorAll('.info-header-tab');\r\n    let tabInfo = document.querySelectorAll('.info-tabcontent');\r\n\r\n    const hideContent = contentNumber => {\r\n        for (let i = contentNumber; i < tabInfo.length; i++) {\r\n            tabInfo[i].classList.remove('show');\r\n            tabInfo[i].classList.add('hide');\r\n        }\r\n    }\r\n\r\n    hideContent(1);\r\n\r\n    const showContent = contentNumber => {\r\n        if (tabInfo[contentNumber].classList.contains('hide')) {\r\n            tabInfo[contentNumber].classList.remove('hide');\r\n            tabInfo[contentNumber].classList.add('show');\r\n        }\r\n    }\r\n\r\n    infoHeader.addEventListener('click', event => {\r\n        let target = event.target;\r\n        if (target && target.classList.contains('info-header-tab')) {\r\n            for (let i = 0; i < tabs.length; i++) {\r\n                if (target == tabs[i]) {\r\n                    hideContent(0);\r\n                    showContent(i);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nmodule.exports = tabs;","function timer() {\r\n    //===========Оживляем таймер==========\r\n    let deadline = '2019-11-12';\r\n\r\n    //Получаем секунды, минуты, часы до даты окончания таймера.\r\n    const getCurrectTime = endTime => {\r\n        let timeToD = Date.parse(endTime) - Date.parse(new Date()),\r\n            hours = Math.floor((timeToD / (1000 * 60 * 60))),\r\n            minutes = Math.floor((timeToD / 1000 / 60) % 60),\r\n            seconds = Math.floor((timeToD / 1000) % 60);\r\n\r\n        return {\r\n            'total': timeToD,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds,\r\n        };\r\n    }\r\n\r\n    //Записываем в вёрстку полученные значения\r\n    const createTimer = (id, endTime) => {\r\n        let timer = document.getElementById(id),\r\n            hours = timer.querySelector('.hours'),\r\n            minutes = timer.querySelector('.minutes'),\r\n            seconds = timer.querySelector('.seconds');\r\n        let timerInterval = setInterval(refreshTimer, 1000);\r\n\r\n        function refreshTimer() {\r\n            let t = getCurrectTime(endTime);\r\n\r\n            hours.textContent = t.hours;\r\n            minutes.textContent = t.minutes;\r\n            seconds.textContent = t.seconds;\r\n            if (t.hours < 10) {\r\n                hours.textContent = '0' + t.hours;\r\n            }\r\n            if (t.minutes < 10) {\r\n                minutes.textContent = '0' + t.minutes;\r\n            }\r\n            if (t.seconds < 10) {\r\n                seconds.textContent = '0' + t.seconds;\r\n            }\r\n\r\n            if (t.total <= 0) {\r\n                clearInterval(timerInterval);\r\n                hours.textContent = '00';\r\n                minutes.textContent = '00';\r\n                seconds.textContent = '00';\r\n            }\r\n        }\r\n    }\r\n\r\n    createTimer('timer', deadline);\r\n}\r\n\r\nmodule.exports = timer;","window.addEventListener('DOMContentLoaded', () => {\r\n    'use strict';\r\n    \r\n    let calc = require('./parts/calc'),\r\n        form = require('./parts/form'),\r\n        slider = require('./parts/slider'),\r\n        tabs = require('./parts/tabs'),\r\n        modal = require('./parts/modal'),\r\n        timer = require('./parts/timer');\r\n\r\n    calc();\r\n    form();\r\n    slider();\r\n    tabs();\r\n    modal();\r\n    timer();\r\n\r\n});"],"sourceRoot":""}